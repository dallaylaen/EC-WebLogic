#
#  Copyright 2016 Electric Cloud, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

[% preamble %]

userName = r'''
[% username %]
'''.strip()

password = r'''
[% password %]
'''.strip()

weblogicURL = r'''
[% admin_url %]
'''.strip()

clusterName = r'''
[% cluster_name %]
'''.strip()

timeout = r'''
[% timeout %]
'''.strip()

timeout = int(timeout)

connect(userName, password, weblogicURL)

runningServers = isClusterHasStatus(clusterName, ['RUNNING'])
if runningServers:
    print "WARNING" + ':' + "%s server(s) are already running." % (runningServers)

startCluster(clusterName)
servers = getClusterMembers(clusterName)
domainRuntime()
errorsCount = 0
timeSpent = 0

while 1:
    notOk = 0
    for server in servers:
        srv = server.getName()
        status = cmo.lookupServerLifeCycleRuntime(srv).getState()
        if status != 'RUNNING':
            notOk += 1
            print srv + ': ' + status
    if timeSpent >= timeout:
        print "Timed out."
        errorsCount += 1
        break
        
    if notOk > 0:
        print "Waiting for cluster to start"
        pytime.sleep(5)
        timeSpent += 5
    else:
        print "Cluster was successfully started."
        break

if errorsCount > 0:
    print "Error occured during starting cluster %s\n" % (clusterName)
    sys.exit(1)
