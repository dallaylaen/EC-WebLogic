#
#  Copyright 2016 Electric Cloud, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

from weblogic.management.security.authentication import UserReaderMBean
from weblogic.management.security.authentication import GroupReaderMBean
from weblogic.management.security.authentication import UserLockoutManagerMBean
try:
    print('Going for unlocking user account')
    # connect to the server
    connect(r'[% wl_username %]', r'[% wl_password %]', r'[% admin_url %]')
    userName = r'[% user_name %]'
    domainName = r'[% domain_name %]'
    realmName = r'[% realm_name %]'
    
    #Check if the user exists
    cd('/SecurityConfiguration/' + domainName + '/Realms/' + realmName + '/AuthenticationProviders/DefaultAuthenticator')
    if (not cmo.userExists(userName)):
        print('User: ' + userName + ' does not exist.')
        sys.exit(1)      

    cd('/SecurityConfiguration/' + domainName + '/Realms/' + realmName)
    # test if a user is lockedOut
    lockoutManager = cmo.getUserLockoutManager()    
    if (lockoutManager.isLockedOut(userName)):
        lockoutManager.clearLockout(userName)
        print('User Account: ' + userName + ' is unlocked.')
    else:
        print('User Account: ' + userName + ' is already unlocked.')   
except WLSTException, e:
    print('Unlocking User Account Exception: ' + str(e))
    sys.exit(1)

