#
#  Copyright 2016 Electric Cloud, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

# imports
import re
import sys

def startChanges():
    edit()
    startEdit()

# Saves and activates changes
def commitChanges(lockTimeout = None):
    save()
    params = {'block': 'true'}
    if lockTimeout:
        params['timeout'] = lockTimeout
    activate(**params)


def discardChanges():
    stopEdit('y')

# add parse function
def parseOptions(options):
    print "Options: %s" % (options)
    optionsDict = {}
    for nextArgument in re.split('\s*,\s*', options):
        arguments = nextArgument.split('=')
        optionsDict[arguments[0]]=arguments[1]
    return optionsDict

# checks if application exists:
def checkIfApplicationExists(appName, appVersion = '', appPlanVersion = ''):
    found = 0
    for deployment in cmo.getAppDeployments():
        deployment_name = deployment.getName()
        name = ''
        version = ''
        plan_version = ''

        version_array = []
        version_array = deployment_name.split('#')
    
        if len(version_array) == 1:
            name = version_array[0]
        elif len(version_array) == 2:
            name, version = version_array
        elif len(version_array) == 3:
            name, version, plan_version = version_array

        if name == appName and version == appVersion and plan_version == appPlanVersion:
            found = 1
            
    return found
